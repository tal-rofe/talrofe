name: Fulfill Terraform

on:
    workflow_dispatch:
    push:
        branches: [main]
        paths:
            - terraform/**

concurrency:
    group: ${{ github.workflow }}
    cancel-in-progress: false

jobs:
    fulfill_terraform:
        name: Fulfill Terraform
        runs-on: ubuntu-latest
        env:
            AWS_REGION: ${{ vars.AWS_REGION }}
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            TF_VAR_app_s3_bucket_name: ${{ secrets.APP_S3_BUCKET_NAME }}

        steps:
            - uses: actions/checkout@v4

            - uses: actions/setup-node@v4
              with:
                  node-version-file: '.nvmrc'

            - uses: pnpm/action-setup@v3
              with:
                  run_install: true

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: ${{ vars.AWS_REGION }}

            - name: Terraform setup
              uses: hashicorp/setup-terraform@v3
              with:
                  terraform_wrapper: false

            - name: Terraform init
              working-directory: terraform
              env:
                  TERRAFORM_BACKEND_S3_BUCKET: ${{ secrets.TERRAFORM_BACKEND_S3_BUCKET }}
              run: |
                  terraform init \
                  -backend-config="bucket=$TERRAFORM_BACKEND_S3_BUCKET" \
                  -backend-config="region=$AWS_REGION"

            - name: Terraform plan
              working-directory: terraform
              run: terraform plan -no-color -out state.tfplan

            - name: Terraform apply
              working-directory: terraform
              run: terraform apply state.tfplan

            - name: Get Terraform core outputs
              id: terraform-outputs1
              working-directory: terraform
              run: |
                  app_cloudfront_distribution_id=$(terraform output -raw app_cloudfront_distribution_id)
                  echo "APP_CLOUDFRONT_DISTRIBUTION_ID=$app_cloudfront_distribution_id" >> $GITHUB_OUTPUT

            - name: Set app Cloudfront distribution ID secret
              uses: hmanzur/actions-set-secret@v2.0.0
              with:
                  name: APP_CLOUDFRONT_DISTRIBUTION_ID
                  value: ${{ steps.terraform-outputs1.outputs.APP_CLOUDFRONT_DISTRIBUTION_ID }}
                  repository: tal-rofe/talrofe
                  token: ${{ secrets.SET_SECRETS_GH_TOKEN }}
